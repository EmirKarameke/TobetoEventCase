@page "/myEvents"
@using EventCase.Application.Contract.Events.Dtos
<Container Class="container-md">
<Card>
    <CardHeader>
        Etkinlik Listesi
            <Button Class="btn btn-primary float-end" Clicked="@ShowAddModal"><Icon Name="IconName.PlusCircle" /> Yeni Etkinlik Ekle</Button>
    </CardHeader>
    <CardBody>
        <Table Hoverable>
            <TableHeader>
                <TableRow>
                    <TableHeaderCell>Etkinlik Adı</TableHeaderCell>
                    <TableHeaderCell>Etkinlik Tarihi</TableHeaderCell>
                    <TableHeaderCell>Etkinlik Saati</TableHeaderCell>
                    <TableHeaderCell>Düzenlendiği Yer</TableHeaderCell>
                    <TableHeaderCell>Etkinliği Düzenle</TableHeaderCell>
                    <TableHeaderCell>Etkinliği Sil</TableHeaderCell>
                </TableRow>
            </TableHeader>
            @foreach (var Event in ListEvents)
            {
            <TableBody>
                <TableRow>
                    <TableRowHeader>@Event.Name</TableRowHeader>
                    <TableRowCell>@Event.Date</TableRowCell>
                    <TableRowCell>@Event.Time</TableRowCell>
                    <TableRowCell>@Event.Location</TableRowCell>
                    <TableRowCell><Button Color="Color.Warning" Clicked=" () => ShowUpdateModal(Event)">Düzenle</Button></TableRowCell>
                    <TableRowCell><Button Color="Color.Danger" Clicked=" () => DeleteEvent(Event.Id)">Sil</Button></TableRowCell>
                </TableRow>
            </TableBody>
            }
        </Table>
    </CardBody>
    <CardFooter>Card Footer</CardFooter>
</Card>
</Container>
<Modal @ref="eventAdd">
    <ModalContent Centered>
        <ModalHeader>
            <ModalTitle>Etkinlik Ekleme</ModalTitle>
            <CloseButton />
        </ModalHeader>
        <ModalBody>
            <Field>
                <FieldLabel>Etkinlik Adı</FieldLabel>
                <TextEdit Placeholder="Etkinlik Adı Giriniz..." @bind-Text="EventDto.Name" />
            </Field>
            <Field>
                <FieldLabel>Etkinlik Tarihi</FieldLabel>
                <DateEdit @bind-Date="@EventDto.Date" />
            </Field>
            <Field>
                <FieldLabel>Etkinlik Saati</FieldLabel>
                <TimePicker  @bind-Time="@EventDto.Time" />
            </Field>
            <Field>
                <FieldLabel>Etkinlik Yeri</FieldLabel>
                <TextEdit @bind-Text="EventDto.Location" />
            </Field>
        </ModalBody>
        <ModalFooter>
            <Button Color="Color.Danger" Clicked="@HideAddModal">Kapat</Button>
            <Button Color="Color.Success" Clicked="@AddEvent">Etkinlik Ekle</Button>
        </ModalFooter>
    </ModalContent>
</Modal>

<Modal @ref="eventUpdate">
    <ModalContent Centered>
        <ModalHeader>
            <ModalTitle>Etkinlik Güncelleme</ModalTitle>
            <CloseButton />
        </ModalHeader>
        <ModalBody>
            <Field>
                <FieldLabel>Etkinlik Adı</FieldLabel>
                <TextEdit Placeholder="Etkinlik Adı Giriniz..." @bind-Text="SelectedEvent.Name" />
            </Field>
            <Field>
                <FieldLabel>Etkinlik Tarihi</FieldLabel>
                <DateEdit @bind-Date="@SelectedEvent.Date" />
            </Field>
            <Field>
                <FieldLabel>Etkinlik Saati</FieldLabel>
                <TimePicker @bind-Time="@SelectedEvent.Time" />
            </Field>
            <Field>
                <FieldLabel>Etkinlik Yeri</FieldLabel>
                <TextEdit @bind-Text="SelectedEvent.Location" />
            </Field>
        </ModalBody>
        <ModalFooter>
            <Button Color="Color.Danger" Clicked="@HideAddModal">Kapat</Button>
            <Button Color="Color.Warning" Clicked="@UpdateEvent">Etkinlik Güncelle</Button>
        </ModalFooter>
    </ModalContent>
</Modal>


@code {
    private Modal eventAdd;
    private Modal eventUpdate;
    private Task ShowAddModal()
    {
        return eventAdd.Show();
    }
    private Task ShowUpdateModal(EventDto eventDto)
    {
        SelectedEvent = eventDto;
        return eventUpdate.Show();
    }
    private Task HideAddModal()
    {
        return eventAdd.Hide();
    }
    private Task HideUpdateModal()
    {
        return eventUpdate.Hide();
    }
}